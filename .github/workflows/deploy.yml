name: CI/CD for Portfolio

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # Runs weekly on Sunday at midnight

permissions:
  contents: read
  pages: write
  id-token: write
  security-events: write # Required for CodeQL in codeql-analysis job

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Detect Package Manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install Dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Run Lint
        run: yarn run lint

      - name: Run Dependency Audit
        run: yarn audit

      - name: Run Tests with Coverage
        run: yarn test --coverage
        env:
          CI: true # Fail if tests do not pass

      - name: Build Project
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Separate CodeQL Analysis job
  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: "javascript" # Adjust languages as needed

      - name: Build Project for CodeQL
        run: |
          yarn install
          yarn build  # Necessary to make the code ready for analysis

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Deployment job that depends on both build and codeql-analysis
  deploy:
    runs-on: ubuntu-latest
    needs: [build, codeql-analysis]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
